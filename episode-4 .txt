EVENT SOURCING  AND EVENT SOURCING LARAVEL
-https://www.youtube.com/watch?v=xIB_VQVVWKk
-In this episode we are going to look at the process of adding items to carts,
    and these creating an order. This will be heavily focused on Event Storming and Event Sourcing.
  -Event Storming ? - What is happening in the domain of a software program
     eg https://juststeveking.notion.site/Episode-4-5ba1165263de4e7fb27e0f826a67e5f5
    - **Product is added to Cart**
    - **Product Quantity is increased**
    - **Product Quantity is decreased**
    - **Product is remove from Cart**
    - **Coupon is added to Cart**
    - **Coupon is removed from Cart**
    - **Coupon fails to be added**
  -Event Sourcing ?
DIAGRAM
https://miro.com/app/board/o9J_lvHnIMs=/

composer update

INSTALL PEST PHP
-install the package for pest/php
  composer require pestphp/pest --dev --with-all-dependencies
  composer require pestphp/pest-plugin-laravel --dev
  php artisan pest:install

RUN TEST IN  PEST
 ./vendor/bin/pest
 php artisan test

START WITH EVENT SOURCING
 https://spatie.be/docs/laravel-event-sourcing/v5/introduction
 composer require spatie/laravel-event-sourcing
 php artisan vendor:publish --provider="Spatie\EventSourcing\EventSourcingServiceProvider" --tag="event-sourcing-migrations"
 php artisan migrate
    Migrating: 2021_09_27_131706_create_stored_events_table
    Migrated:  2021_09_27_131706_create_stored_events_table (398.07ms)
    Migrating: 2021_09_27_131707_create_snapshots_table
    Migrated:  2021_09_27_131707_create_snapshots_table (80.33ms)
 php artisan vendor:publish --provider="Spatie\EventSourcing\EventSourcingServiceProvider" --tag="event-sourcing-config"

CREATE AN AGGREGATE FOR APPLICATION
-create a folder/Directory called Aggregates  src/Domains/Customer/Aggregates
-Inside Oof it, gonna create CartAggregate Class
-Extends Spatie\EventSourcing\AggregateRoots\AggregateRoot

WRITING AN AGGREGATE
https://spatie.be/docs/laravel-event-sourcing/v5/using-aggregates/writing-your-first-aggregate
-Create an Events Directory in src/Domains/Customer
    src/Domains/Customer/Events
-Create the php class file called ProductWasAddedToCart in the EVENTS Directory
-Extends Spatie\EventSourcing\StoredEvents\ShouldBeStored
-Within CartAggregate , we need to path two things
        -product indentifies
        -cart  indentifies
       we need to know w/c cart has been added to the product

-declare the constructor  into ProductWasAddedToCart
-Aggregate is controlling the middle part of event sourcing
-Aggregate will store an event
--Fire the events
-Listerner

PROJECTORS
-Create a projector directory in the Customer
        src/Domains/Customer/Projectors
-Create a CartProjector class
-Extends Spatie\EventSourcing\EventHandlers\Projectors\Projector
-Projector will add it

REGISTERING THE PROJECTORS
-https://spatie.be/docs/laravel-event-sourcing/v5/using-projectors/creating-and-configuring-projectors
-Create an event provider
     php artisan make:provider  EventSourcingServiceProvider
-register the projector into EventSourcingServiceProvider


REMOVE PRODUCT FROM CART EVENT SOURCING
-RemoveProductfromCart
-add the removeProduct() method in the CartAggregate class
-create an event file ProductWasRemovedFromCart in Events Folder
-extends to Spatie\EventSourcing\StoredEvents\ShouldBeStored
-Within the ProductWasRemovedFromCart class we should pass constructor
-Record this into CartAggregate
-create a abstract class in Events folder,are both similar (constructors)
-create a class called AbstractProductCartEvent/ProductCartEvent
-Extends Spatie\EventSourcing\StoredEvents\ShouldBeStored
-Each Event ,should extends to AbstractProductCartEvent
-move all the constructor into ProductCartEvent
-Register into Projectors inside the CartProjector file
 -add onProductWasRemovedFromCart() method and call the Events
-Projector is listening an event ,like handler

INCREASE QUANTITY  EVENT SOURCING
-Add the increase into CartAggregate
-Follow the same procedure from above

/usr/local/Cellar/php/8.0.0_1/bin/php /Users/os/Documents/projects/shop-app/tests/Feature/CartAggregate.php
dyld: Library not loaded: /usr/local/opt/openldap/lib/libldap-2.4.2.dylib
  Referenced from: /usr/local/Cellar/php/8.0.0_1/bin/php
  Reason: image not found
