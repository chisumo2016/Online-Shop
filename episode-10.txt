RESOURCES
Bonus: workbench running.
https://github.com/JustSteveKing/shop
https://juststeveking.notion.site/Episode-8-b2296c1fee9a47e9a42ad3a6439fce7e
https://github.com/brendt/phpstorm-photon-them
https://github.com/timacdonald/json-api
https://laravelshift.com/phpunit-to-pest-converter
https://laravelshift.com/workbench
https://pestphp.com/
https://meetup.laravel.com/events
https://www.youtube.com/watch?v=2UyDBArGLDY

NB:Moving Order codes into the Fulfilment domain folder

Episode 10
- We will be using Stripe
    -We will be using Stripe as our payment provider. We will not be using Cashier, or any payment library other than Stripe SDK.
     To create a payment for an order, the front end/mobile app/interface whatever will talk to the API, will talk to stripe, create a payment intent - and then this will be used to track payments going forward.
     This payment intent will need to be stored on the server side - so that we can track progress.
       Order:
         attributes:
           id: int
           ...
           intent: string

           Payment:
             attributes:
               id: int
               ...
               intent: string

-Add  a new column to our order Migration
   $table->string('intent_id')->nullable()->unique();
-intent ID is the payment intent from stripe
-Add the intent_id on Order Model
-Migrate and refresh
-Run Test
-Add the $intent on  src/Domains/Fulfilment/ValueObjects/OrderValueObject.php
    public null|string $intent,
-Add on Factories of src/Domains/Fulfilment/Factories/OrderFactory.php
     intent:   $attributes['intent'],
-Run Test again
-Failed Test
     Too few arguments to function Domains\Fulfilment\ValueObjects\OrderValueObject::__construct(),
-Solution
    Add the  intent: null in tests/Datasets/Actions.php
-Run the Test and Passed

-To install Stripe/Cli
   brew install stripe/stripe-cli/stripe
     run `stripe login` first.
     stripe
     stripe trigger
     payment_intent.succeeded
     stripe trigger  payment_intent.succeeded
     stripe listen --forward-to shop-app.test/api/v1/stripe/hooks
-Create a api  for our webhook
-Create WebhookController
   php artisan make:controller Api\\V1\\Orders\\StripeWebhookController --invokable
-https://stripe.com/docs/webhooks/signatures#verify-official-libraries
    composer search stripe
    composer require stripe/stripe-php
-Create Middleware   SignatureValidationMiddleware
       php artisan make:middleware Stripe\\Signature\\SignatureValidationMiddleware
-Create StripeServiceProvider
   php artisan make:provider  StripeServiceProvider
-We need to load the Middleware IN the  StripeServiceProvider
-Hook into SignatureValidationMiddleware
    https://stripe.com/docs/webhooks/signatures#verify-official-libraries
-Register the middleware in the kernel
-Apply the middleware in api route
-Register the services in services.php

-Testing
https://github.com/spatie/laravel-stripe-webhooks/blob/main/tests/IntegrationTest.php
https://github.com/spatie/laravel-stripe-webhooks/blob/main/tests/TestCase.php
-Write a test to  webhookTest
- php artisan route:list --compact
-Create Job
   php artisan make:job Stripe\\ProcessPaymentIntent

















